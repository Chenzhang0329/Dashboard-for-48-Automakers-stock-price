}
warnings()
print(stationary_vector)
print(nonstation_vector)
for(i in stock_price$Symbol){
df <- stock_price %>%
filter(Symbol == i) %>%
select('Date', 'Close')
df_ts <- xts(df$Close, frequency = 365, order.by = as.Date(df$Date))
adf.test(df_ts)$p.value
if(adf.test(df_ts)$p.value > 0.05){
append(nonstation_vector, i)
}else{
append(stationary_vector, i)
}
}
for(i in stock_price$Symbol){
df <- stock_price %>%
filter(Symbol == i) %>%
select('Date', 'Close')
df_ts <- xts(df$Close, frequency = 365, order.by = as.Date(df$Date))
print(adf.test(df_ts)$p.value)
if(adf.test(df_ts)$p.value > 0.05){
append(nonstation_vector, i)
}else{
append(stationary_vector, i)
}
}
for(i in automakers_data$Symbol){
df <- stock_price %>%
filter(Symbol == i) %>%
select('Date', 'Close')
df_ts <- xts(df$Close, frequency = 365, order.by = as.Date(df$Date))
print(adf.test(df_ts)$p.value)
if(adf.test(df_ts)$p.value > 0.05){
append(nonstation_vector, i)
}else{
append(stationary_vector, i)
}
}
print(stationary_vector)
print(nonstation_vector)
for(i in automakers_data$Symbol){
df <- stock_price %>%
filter(Symbol == i) %>%
select('Date', 'Close')
df_ts <- xts(df$Close, frequency = 365, order.by = as.Date(df$Date))
if(adf.test(df_ts)$p.value >= 0.05){
print(i)
append(nonstation_vector, i)
}else{
print(i)
append(stationary_vector, i)
}
}
print(stationary_vector)
print(nonstation_vector)
stationary_vector <- c()
nonstation_vector <- c()
for(i in automakers_data$Symbol){
df <- stock_price %>%
filter(Symbol == i) %>%
select('Date', 'Close')
df_ts <- xts(df$Close, frequency = 365, order.by = as.Date(df$Date))
if(adf.test(df_ts)$p.value >= 0.05){
print(i)
append(nonstation_vector, i)
}else{
print(i)
append(stationary_vector, i)
}
for(i in automakers_data$Symbol){
df <- stock_price %>%
filter(Symbol == i) %>%
select('Date', 'Close')
df_ts <- xts(df$Close, frequency = 365, order.by = as.Date(df$Date))
if(adf.test(df_ts)$p.value >= 0.05){
print(i)
append(nonstation_vector, i)
}else{
print(i)
append(stationary_vector, i)
}
}
print(stationary_vector)
print(nonstation_vector)
for(i in automakers_data$Symbol){
df <- stock_price %>%
filter(Symbol == i) %>%
select('Date', 'Close')
df_ts <- xts(df$Close, frequency = 365, order.by = as.Date(df$Date))
if(adf.test(df_ts)$p.value >= 0.05){
print(i)
nonstation_vector <- append(nonstation_vector, i)
}else{
print(i)
stationary_vector <- append(stationary_vector, i)
}
}
print(stationary_vector)
print(nonstation_vector)
TSLA_Stock <- stock_price %>%
filter(Symbol == 'RACE') %>%
select('Date', 'Close')
TSLA.ts <- xts(TSLA_Stock$Close, frequency = 365, order.by = as.Date(TSLA_Stock$Date))
adf.test(TSLA.ts)$p.value
plot(TSLA.ts)
automodel <- auto.arima(TSLA.ts)
forecast <-  forecast(automodel, h = 50)
plot(forecast)
# merge time series
merged_ts <- ts(c(TSLA.ts, forecast),
start = start(TSLA.ts),
frequency = frequency(TSLA.ts))
TSLA_Stock <- stock_price %>%
filter(Symbol == 'RIVN') %>%
select('Date', 'Close')
TSLA.ts <- xts(TSLA_Stock$Close, frequency = 365, order.by = as.Date(TSLA_Stock$Date))
adf.test(TSLA.ts)$p.value
plot(TSLA.ts)
automodel <- auto.arima(TSLA.ts)
forecast <-  forecast(automodel, h = 50)
plot(forecast)
TSLA_Stock <- stock_price %>%
filter(Symbol == 'FSR') %>%
select('Date', 'Close')
TSLA.ts <- xts(TSLA_Stock$Close, frequency = 365, order.by = as.Date(TSLA_Stock$Date))
plot(TSLA.ts)
automodel <- auto.arima(TSLA.ts)
forecast <-  forecast(automodel, h = 50)
plot(forecast)
auto.arima(TSLA.ts)
TSLA_Stock <- stock_price %>%
filter(Symbol == '003620.KS') %>%
select('Date', 'Close')
TSLA.ts <- xts(TSLA_Stock$Close, frequency = 365, order.by = as.Date(TSLA_Stock$Date))
plot(TSLA.ts)
automodel <- auto.arima(TSLA.ts)
forecast <-  forecast(automodel, h = 50)
forecast
plot(forecast)
TSLA.ts
tail(TSLA.ts)
TSLA_Stock$Date[-1] + 1
TSLA_Stock$Date[-1]
TSLA_Stock$Date[-1,]
TSLA_Stock$Date[,-1]
TSLA_Stock["Date"]. max()
TSLA_Stock$"Date". max()
TSLA_Stock$Date.max()
as.Date(TSLA_Stock$Date).max()
max(TSLA_Stock$Date)
forecast
forecast$point
forecast$Point
date <- c()
for(i < 50){
date <- c()
i <- 0
for(i < 50){
date <- c()
i <- 0
for(i <= 50){
date <- c()
i <- 0
while(i <= 50){
date <- append(as.Date(max(TSLA_Stock$Date)) + i, date)
i <- i + 1
}
date
date <- c()
i <- 0
while(i <= 50){
date <- append(as.Date(max(TSLA_Stock$Date)) + i, date, 1)
i <- i + 1
}
date
date <- c()
i <- 1
while(i < 50){
date <- append(as.Date(max(TSLA_Stock$Date)) + i, date, 1)
i <- i + 1
}
date
sort(date)
date <- c()
i <- 1
while(i < 51){
date <- append(as.Date(max(TSLA_Stock$Date)) + i, date, 1)
i <- i + 1
}
date
sort(date)
date <- data.frame(sort(date))
forecast$Point <- date
forecas
forecast
date
forecast$Date <- date
forecast
date <- c()
i <- 1
while(i < 51){
date <- append(as.Date(max(TSLA_Stock$Date)) + i, date, 1)
i <- i + 1
}
date
sort(date)
forecast$Date <- sort(date)
forecast
forecast <- data.frame(forecast)
forecast$Date <- sort(date)
forecast
forecast$Date <- sort(date)
forecast <- data.frame(forecast)
forecast
plot(forecast)
forecast <- forecast %>%
select(Date, Point.Forecast)
forecast
colnames(forecast) <- c('Date', 'Close')
forecast
TSLA_Stock
whole_data <- rbind(TSLA_Stock, forecast)
whole_data
ggplot(whole_data, aes(x = Date, y = Close)) + geom_line()
library(ggplot2)
ggplot(whole_data, aes(x = Date, y = Close)) + geom_line()
fig <- whole_data %>%
plot_ly(x = ~Date, y = ~Close, mode = 'lines')%>%
layout(showlegend = F)
fig <- whole_data %>%
plot_ly(x = ~Date, y = ~Close, mode = 'lines')
library(plotly)
fig <- whole_data %>%
plot_ly(x = ~Date, y = ~Close, mode = 'lines')
fig
p <- ggplot(whole_data, aes(x=Date, y=Close)) +
geom_line() +
xlab("")
p
i
y
p <- ggplot(whole_data, aes(x=Date, y=Close, group = 1)) +
geom_line() +
xlab("")
p
p+scale_x_date(date_labels = "%m-%Y")
p <- ggplot(whole_data, aes(x=as.Date(Date), y=Close, group = 1)) +
geom_line() +
xlab("")
p+scale_x_date(date_labels = "%m-%Y")
library(shiny); runApp('Desktop/UG/F22 Tony/DATA6200/Final Project/FinalProject.R')
runApp('Desktop/UG/F22 Tony/DATA6200/Final Project/FinalProject.R')
print(stationary_vector)
print(nonstation_vector)
TSLA_Stock <- stock_price %>%
filter(Symbol == 'HMC') %>%
select('Date', 'Close')
max(TSLA_Stock$Date)
TSLA.ts <- xts(TSLA_Stock$Close, frequency = 365, order.by = as.Date(TSLA_Stock$Date))
tail(TSLA.ts)
adf.test(TSLA.ts)$p.value
plot(TSLA.ts)
automodel <- auto.arima(TSLA.ts)
forecast <-  forecast(automodel, h = 50)
# Create date
date <- c()
i <- 1
while(i < 51){
date <- append(as.Date(max(TSLA_Stock$Date)) + i, date, 1)
i <- i + 1
}
date
sort(date)
forecast$Date <- sort(date)
forecast <- data.frame(forecast)
forecast <- forecast %>%
select(Date, Point.Forecast)
colnames(forecast) <- c('Date', 'Close')
forecast
TSLA_Stock
whole_data <- rbind(TSLA_Stock, forecast)
whole_data
p <- ggplot(whole_data, aes(x=as.Date(Date), y=Close, group = 1)) +
geom_line() +
xlab("")
p+scale_x_date(date_labels = "%m-%Y")
runApp('Desktop/UG/F22 Tony/DATA6200/Final Project/FinalProject.R')
TSLA_Stock <- stock_price %>%
filter(Symbol == 'HMC') %>%
select('Date', 'Close')
max(TSLA_Stock$Date)
TSLA.ts <- xts(TSLA_Stock$Close, frequency = 365, order.by = as.Date(TSLA_Stock$Date))
tail(TSLA.ts)
adf.test(TSLA.ts)$p.value
plot(TSLA.ts)
automodel <- auto.arima(TSLA.ts)
forecast <-  forecast(automodel, h = 50)
# Create date
date <- c()
i <- 1
while(i < 51){
date <- append(as.Date(max(TSLA_Stock$Date)) + i, date, 1)
i <- i + 1
}
date
sort(date)
forecast$Date <- sort(date)
forecast <- data.frame(forecast)
tail(TSLA.ts)
forecast <- forecast %>%
select(Date, Point.Forecast)
forecast <- forecast %>%
select(Date, Point.Forecast)
forecast
forecast <- data.frame(forecast)
forecast <- forecast %>%
select(Date, Point.Forecast)
forecast$Date <- sort(date)
forecast <- data.frame(forecast)
forecast
forecast <- forecast %>%
select(Date, Point.Forecast)
colnames(forecast) <- c('Date', 'Close')
forecast
TSLA_Stock
whole_data <- rbind(TSLA_Stock, forecast)
whole_data
p <- ggplot(whole_data, aes(x=as.Date(Date), y=Close, group = 1)) +
geom_line() +
xlab("")
p+scale_x_date(date_labels = "%m-%Y")
plot(TSLA.ts)
p+scale_x_date(date_labels = "%m-%Y")
ts.plot(TSLA.ts, forecast$pred, lty = c(1,3), col=c(5,2))
forecast
print(stationary_vector)
print(nonstation_vector)
TSLA_Stock <- stock_price %>%
filter(Symbol == 'VOW3.DE') %>%
select('Date', 'Close')
max(TSLA_Stock$Date)
TSLA.ts <- xts(TSLA_Stock$Close, frequency = 365, order.by = as.Date(TSLA_Stock$Date))
tail(TSLA.ts)
adf.test(TSLA.ts)$p.value
plot(TSLA.ts)
automodel <- auto.arima(TSLA.ts)
forecast <-  forecast(automodel, h = 50)
# Create date
date <- c()
i <- 1
while(i < 51){
date <- append(as.Date(max(TSLA_Stock$Date)) + i, date, 1)
i <- i + 1
}
date
sort(date)
forecast$Date <- sort(date)
forecast <- data.frame(forecast)
forecast <- forecast %>%
select(Date, Point.Forecast)
forecast$Date <- sort(date)
forecast <- data.frame(forecast)
forecast <- forecast %>%
select(Date, Point.Forecast)
colnames(forecast) <- c('Date', 'Close')
forecast
TSLA_Stock
whole_data <- rbind(TSLA_Stock, forecast)
whole_data
p <- ggplot(whole_data, aes(x=as.Date(Date), y=Close, group = 1)) +
geom_line() +
xlab("")
p+scale_x_date(date_labels = "%m-%Y")
automakers_data = read.csv('/Users/chenzhang/Desktop/UG/F22 Tony/DATA6200/Final Project/Final project data/Largest automakers by market capitalization.csv')
stock_price = read.csv('/Users/chenzhang/Desktop/UG/F22 Tony/DATA6200/Final Project/Final project data/automakers stocks 2010-2022.csv')
library(xts)
library(plotly)
library(scales)
library(ggplot2)
library(dplyr)
library(quantmod)
library(forecast)
library(tseries)
stationary_vector <- c()
nonstation_vector <- c()
for(i in automakers_data$Symbol){
df <- stock_price %>%
filter(Symbol == i) %>%
select('Date', 'Close')
df_ts <- xts(df$Close, frequency = 365, order.by = as.Date(df$Date))
if(adf.test(df_ts)$p.value >= 0.05){
print(i)
nonstation_vector <- append(nonstation_vector, i)
}else{
print(i)
stationary_vector <- append(stationary_vector, i)
}
}
print(stationary_vector)
print(nonstation_vector)
BMW <- stock_price %>%
filter(Symbol == 'BMW.DE') %>%
select('Date', 'Close')
BMW$Date <- as.Date(BMW$Date, "%d/%m/%Y")
Return <- c(diff(log(BMW$Close),1))
plot.zoo(Return,main = " BMW Returns", lwd = 2, col = "blue")
tsData = ts(BMW)
fit<-auto.arima(BMW$Close,trace=TRUE)
summary(fit)
autoplot(forecast(fit,300))
BMW <- stock_price %>%
filter(Symbol == 'HMC') %>%
select('Date', 'Close')
BMW$Date <- as.Date(BMW$Date, "%d/%m/%Y")
tsData = ts(BMW)
fit<-auto.arima(BMW$Close,trace=TRUE)
autoplot(forecast(fit,300))
BMW <- stock_price %>%
filter(Symbol == 'TSLA') %>%
select('Date', 'Close')
BMW$Date <- as.Date(BMW$Date, "%d/%m/%Y")
tsData = ts(BMW)
fit<-auto.arima(BMW$Close,trace=TRUE)
autoplot(forecast(fit,300))
runApp('Desktop/UG/F22 Tony/DATA6200/Final Project/FinalProject.R')
date <- c()
i <- 1
while(i < 51){
date <- append(as.Date(max(TSLA_Stock$Date)) + i, date, 1)
i <- i + 1
}
date
sort(date)
forecast$Date <- sort(date)
forecast <- data.frame(forecast)
forecast
runApp('Desktop/UG/F22 Tony/DATA6200/Final Project/FinalProject.R')
BMW <- stock_price %>%
filter(Symbol %in% c('TSLA', 'LI')) %>%
select('Date', 'Close')
ggplot(BMW, aes(x = Date, y = Clase, group = c('TSLA', 'LI'))) +
geom_line()+scale_x_date(date_labels = "%m-%Y")
ggplot(BMW, aes(x = Date, y = Close, group = c('TSLA', 'LI'))) +
geom_line()+scale_x_date(date_labels = "%m-%Y")
date <- stock_price$Date
date <- stock_price$Date
for(item in c('TSLA', 'LI')){
merge(date, stock_price$Close, by = Date)
}
date <- stock_price$Date
for(item in c('TSLA', 'LI')){
new_data <- stock_price %>%
filter(Symbol == item) %>%
select(Date, Close)
colnames(new_data) <- c('Date', item)
date <- merge(date, new_data, by = Date)
}
date <- stock_price$Date
for(item in c('TSLA', 'LI')){
new_data <- stock_price %>%
filter(Symbol == item) %>%
select(Date, Close)
print(new_data)
colnames(new_data) <- c('Date', item)
date <- merge(date, new_data, by = Date)
}
date <- stock_price$Date
for(item in c('TSLA', 'LI')){
new_data <- stock_price %>%
filter(Symbol == item) %>%
select(Date, Close)
print(new_data)
colnames(new_data) <- c('Date', item)
date <- merge(date, new_data, by = 'Date')
}
date <- stock_price$Date
for(item in c('TSLA', 'LI')){
new_data <- stock_price %>%
filter(Symbol == item) %>%
select(Date, Close)
print(new_data)
colnames(new_data) <- c('Date', item)
date <- inner_join(date, new_data, by = 'Date')
}
fig <- stock_price %>%
plot_ly(x = ~Date, y = ~Close, mode = 'lines')%>%
layout(showlegend = F)
fig <- stock_price %>%
plot_ly(x = ~Date, y = ~Close, mode = 'lines')%>%
layout(showlegend = F)
fig <- add_trace(fig, name = 'TSLA')
fig
p <- ggplot()
for(item in c('TSLA', 'LI')){
new_data <- stock_price %>%
filter(Symbol == item) %>%
select(Date, Close)
p <- p + geom_line(new_data, aes(x = Date, y =Close))
}
rlang::last_error()
color <- c('red', 'blue')
p <- ggplot()
for(i in length(c('TSLA', 'LI'))){
new_data <- stock_price %>%
filter(Symbol == item) %>%
select(Date, Close)
p <- p + geom_line(new_data, aes(x = Date, y = Close), color = color[i])
}
library(shiny); runApp('Desktop/UG/F22 Tony/DATA6200/Final Project/FinalProject.R')
runApp('Desktop/UG/F22 Tony/DATA6200/Final Project/FinalProject.R')
